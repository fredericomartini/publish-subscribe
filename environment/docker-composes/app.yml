# ambiente de desenvolvimento e produção com:
# dados salvos em: /var/mysql/data, arquivo de configuração
# para inicializar mysql config/mysql/my.cnf
#
#
version: "3"
services:
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:6.4.0
  #   volumes:
  #     - elastic_data:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200
  #   environment:
  #     - "http.host=0.0.0.0"
  #     - "transport.host=127.0.0.1"
  #   container_name: "elasticsearch"
  #   networks:
  #     default:
  #       ipv4_address: 172.18.0.100
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:6.4.0
  #   environment:
  #     SERVER_NAME: ${VIRTUAL_HOST}/kibana
  #     ELASTICSEARCH_URL: "http://elasticsearch:9200"
  #   container_name: "kibana"
  #   ports:
  #     - 5601:5601
  #   networks:
  #     default:
  #       ipv4_address: 172.18.0.101      
  redis:
    image: redis:5.0-rc5-alpine
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379
    networks:
      default:
        ipv4_address: 172.18.0.103
  # mysql:
  #   image: mysql:${DB_VERSION}
  #   restart: on-failure
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #     #- ../config/mysql/:/etc/mysql/conf.d
  #     # sql to restore into the new database
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
  #     MYSQL_DATABASE: ${DB_DATABASE}
  #     MYSQL_USER: ${DB_USERNAME}
  #     MYSQL_PASSWORD: ${DB_PASSWORD}
  #     TZ: America/Sao_Paulo
  #   ports:
  #    - 3306:3306
  #    - 33060:33060
  #   networks:
  #     default:
  #       ipv4_address: 172.18.0.104      
  web:
    build:
      context: ../../
      dockerfile: environment/docker-files/node/Dockerfile.${ENVIRONMENT} #dev|prod
    image: ${APP_NAME}/node:8
    restart: on-failure
    container_name: "pubsub_web"
    #dependencias
    depends_on:
      # - elasticsearch
    - redis
      # - mysql
      # - kibana
    volumes:
      #app_dir
      - ../../:/usr/src/app
    working_dir: '/usr/src/app'
    environment:
      VIRTUAL_HOST: ${VIRTUAL_HOST}
    ports:
    #   - 5672:5672
    - 9229:9229
    - 3000:3000
    environment:
      - "http.host=0.0.0.0"
      - "transport.host=127.0.0.1"
volumes:
  redis_data:
  #mysql_data:
  #elastic_data:
networks:
  default:
    external:
      # docker network create --gateway 172.18.0.1 --subnet 172.18.0.0/24 webproxy
      name: ${NETWORK:-webproxy}